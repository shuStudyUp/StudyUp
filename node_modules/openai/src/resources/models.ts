// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

<<<<<<< HEAD
import { APIResource } from '../core/resource';
import { APIPromise } from '../core/api-promise';
import { Page, PagePromise } from '../core/pagination';
import { RequestOptions } from '../internal/request-options';
import { path } from '../internal/utils/path';
=======
import { APIResource } from '../resource';
import * as Core from '../core';
import { Page } from '../pagination';
>>>>>>> c797906be0d504d2f370ed54ed73bcac6be5ad85

export class Models extends APIResource {
  /**
   * Retrieves a model instance, providing basic information about the model such as
   * the owner and permissioning.
   */
<<<<<<< HEAD
  retrieve(model: string, options?: RequestOptions): APIPromise<Model> {
    return this._client.get(path`/models/${model}`, options);
=======
  retrieve(model: string, options?: Core.RequestOptions): Core.APIPromise<Model> {
    return this._client.get(`/models/${model}`, options);
>>>>>>> c797906be0d504d2f370ed54ed73bcac6be5ad85
  }

  /**
   * Lists the currently available models, and provides basic information about each
   * one such as the owner and availability.
   */
<<<<<<< HEAD
  list(options?: RequestOptions): PagePromise<ModelsPage, Model> {
    return this._client.getAPIList('/models', Page<Model>, options);
=======
  list(options?: Core.RequestOptions): Core.PagePromise<ModelsPage, Model> {
    return this._client.getAPIList('/models', ModelsPage, options);
>>>>>>> c797906be0d504d2f370ed54ed73bcac6be5ad85
  }

  /**
   * Delete a fine-tuned model. You must have the Owner role in your organization to
   * delete a model.
   */
<<<<<<< HEAD
  delete(model: string, options?: RequestOptions): APIPromise<ModelDeleted> {
    return this._client.delete(path`/models/${model}`, options);
  }
}

// Note: no pagination actually occurs yet, this is for forwards-compatibility.
export type ModelsPage = Page<Model>;
=======
  del(model: string, options?: Core.RequestOptions): Core.APIPromise<ModelDeleted> {
    return this._client.delete(`/models/${model}`, options);
  }
}

/**
 * Note: no pagination actually occurs yet, this is for forwards-compatibility.
 */
export class ModelsPage extends Page<Model> {}
>>>>>>> c797906be0d504d2f370ed54ed73bcac6be5ad85

/**
 * Describes an OpenAI model offering that can be used with the API.
 */
export interface Model {
  /**
   * The model identifier, which can be referenced in the API endpoints.
   */
  id: string;

  /**
   * The Unix timestamp (in seconds) when the model was created.
   */
  created: number;

  /**
   * The object type, which is always "model".
   */
  object: 'model';

  /**
   * The organization that owns the model.
   */
  owned_by: string;
}

export interface ModelDeleted {
  id: string;

  deleted: boolean;

  object: string;
}

<<<<<<< HEAD
export declare namespace Models {
  export { type Model as Model, type ModelDeleted as ModelDeleted, type ModelsPage as ModelsPage };
=======
Models.ModelsPage = ModelsPage;

export declare namespace Models {
  export { type Model as Model, type ModelDeleted as ModelDeleted, ModelsPage as ModelsPage };
>>>>>>> c797906be0d504d2f370ed54ed73bcac6be5ad85
}
